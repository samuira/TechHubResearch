"""
Django settings for oscar_proj project.

Generated by 'django-admin startproject' using Django 2.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
from oscar.defaults import *

location = lambda x: os.path.join(
    os.path.dirname(os.path.realpath(__file__)), x)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
print(BASE_DIR)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '^_9h+b6e9c3u$xd*+jyp(mlr^6h5j4^fc7(ys24k14_2ca4m@n'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['.pysdk.openpaysdk.com','*']


# Application definition

from oscar import get_core_apps
from django.utils.translation import ugettext_lazy as _

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.flatpages',
    'django.contrib.gis',
    #'rest_framework',
    'compressor',
    'widget_tweaks',
    'custom_payment',
    'oscarapi',
    'stores',
] + get_core_apps([
    'checkout',
    'order',
    'customer',
    'dashboard',
    'promotions',
    'catalogue',
])

SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'oscar.apps.basket.middleware.BasketMiddleware',
    'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware',
]

ROOT_URLCONF = 'oscar_proj.urls'

from oscar import OSCAR_MAIN_TEMPLATE_DIR

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
            OSCAR_MAIN_TEMPLATE_DIR
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.i18n',
                'django.contrib.messages.context_processors.messages',
                'oscar.apps.search.context_processors.search_form',
                'oscar.apps.promotions.context_processors.promotions',
                'oscar.apps.checkout.context_processors.checkout',
                'oscar.apps.customer.notifications.context_processors.notifications',
                'oscar.core.context_processors.metadata',
            ],
        },
    },
]

TEMPLATE_LOADERS = (
    'django.template.loaders.filesystem.Loader',
    'django.template.loaders.app_directories.Loader',
    'django.template.loaders.eggs.Loader',
)

from oscar import OSCAR_MAIN_TEMPLATE_DIR

TEMPLATE_DIRS = (
    location('templates'),
    OSCAR_MAIN_TEMPLATE_DIR,
)
AUTHENTICATION_BACKENDS = (
    'oscar.apps.customer.auth_backends.EmailBackend',
    'django.contrib.auth.backends.ModelBackend',
)
# REST_FRAMEWORK = {
#     'DEFAULT_PERMISSION_CLASSES': (
#         'rest_framework.permissions.AllowAny',
#     )
# }

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend' # if not included => ConnectionRefusedError: [Errno 111] Connection refused

WSGI_APPLICATION = 'oscar_proj.wsgi.application'

HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.simple_backend.SimpleEngine',
    },
}
# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': 'db',
        'USER': 'postgres',
        'PASSWORD': 'postgres',
        'HOST': 'postgres',  # service name which is mention in the docker-compose.yml
        'PORT': '5432'
        },
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': 'db.sqlite3',
    #     'USER': '',
    #     'PASSWORD': '',
    #     'HOST': '',
    #     'PORT': '',
    #     'ATOMIC_REQUESTS': True,
    # }
}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


OSCAR_PAYMENT_METHODS = (
    ('dbt', _('Direct bank transfer')),
    ('cod', _('Cash on delivery')),
    ('custom_payment', _('openpay')),
)


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
# COMPRESS_ROOT = os.path.join(BASE_DIR, 'static')


from openpay import Merchant, Client
# JamAuthToken = os.environ.get('JAM_AUTH_TOKEN')
JamAuthToken = '10000000000000006|05a0e2ba-2d75-4f04-8522-0ac2405080e7'
MERCHANT = None
try:
    JamAuthTokenList = JamAuthToken.split('|')
    # country_code: "uk" or "au"
    MERCHANT = Merchant(jam_auth_token=JamAuthToken, country_code="uk", auth_token=JamAuthTokenList[1], openpay_url_mode="Training")
except AttributeError as ae:
    raise Exception("""Please setup JamAuthToken with "export JAM_AUTH_TOKEN='.......|.....-....-......-....-.....'"
    from terminal.""")
CLIENT = Client(merchant=MERCHANT)

########## Oscar API ###########
OSCARAPI_BLOCK_ADMIN_API_ACCESS = True
OSCARAPI_OVERRIDE_MODULES = ["oscar_proj.custom_oscar_api"]
GOOGLE_MAPS_API_KEY = 'AIzaSyBC8ohCpWs2c7l_qkpjejEN2U3lVnx4KTQ'
# GOOGLE_MAPS_API_KEY = 'AIzaSyCwRijNhNSd8pko-e_O0BjiMH_0bTS3Yro' # A Roy